{"version":3,"sources":["components/NavBar.js","components/elements/Input.js","components/elements/Select.js","components/elements/TextArea.js","components/userprofiles/UserProfile.styled.js","components/userprofiles/UserProfile.js","components/elements/Checkbox.js","components/grouproles/GroupRoles.styled.js","components/grouproles/GroupRoles.js","components/application/Applications.styled.js","components/application/Applications.js","components/userattributes/UserAttributes.styled.js","components/userattributes/UserAttributes.js","pages/dashboard/Dashboard.styled.js","pages/dashboard/Dashboard.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","InputTextFeild","placeholder","field","TextField","fullWidth","label","SelectFeild","options","FormControl","InputLabel","htmlFor","Select","value","map","opt","MenuItem","value_string","key","id","value_display","TextAreaFeild","multiline","rows","rowsMax","classes","theme","gridContainer","textAlign","marginTop","submit","UserProfile","this","props","fields","length","initialValues","Object","assign","item","field_name","onSubmit","values","enableReinitialize","Grid","container","direction","alignItems","alignContent","spacing","className","i","field_type","xs","sm","md","lg","name","field_label","component","Button","type","React","Component","withStyles","CheckboxtFeild","FormControlLabel","control","Checkbox","groupRoles","GroupRolesForm","root","width","paper","boxShadow","table","border","grid","applicationLabel","paddingTop","Applications","gutterBottom","Table","size","TableHead","TableRow","TableCell","TableBody","applications","row","scope","roleName","menuCategory","applicationName","useStyles","makeStyles","overflowX","marginBottom","createData","UserAttributes","style","padding","userAttributes","userProfile","Dashboard","state","user_profile","group_roles","user_attributes","fetch","then","res","json","data","setState","catch","console","log","Fragment","CssBaseline","Container","maxWidth","Paper","align","Divider","GroupRoles","THEME","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","overrides","MuiTableCell","head","fontWeight","App","MuiThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f20fe430.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nconst NavBar = () => {\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                        MODE Transportation\n                </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\nexport default NavBar;","import { TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const InputTextFeild = ({\n  placeholder,\n  field\n}) => {\n  return (\n    <TextField\n      fullWidth\n      label={placeholder}\n      placeholder={placeholder}\n      {...field}\n    />\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport const SelectFeild = ({ placeholder, field, options }) => {\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"age-simple\">Select {placeholder}</InputLabel>\n      <Select fullWidth {...field} value=\"\">\n        {options.map(opt => {\n          return (\n            <MenuItem value={opt.value_string} key={opt.id}>\n              {opt.value_display}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const TextAreaFeild = ({ field }) => {\n  return (\n    <TextField\n      placeholder=\"Comments\"\n      multiline={true}\n      rows={2}\n      rowsMax={4}\n      {...field}\n      fullWidth\n    />\n  );\n};\n","const classes = theme => ({\n  gridContainer: {\n    textAlign: \"left\",\n    marginTop: \"10px\"\n  },\n  submit: {\n    textAlign: \"right\",\n    marginTop: \"10px\"\n  }\n});\n\nexport default classes;","import React from \"react\";\nimport { InputTextFeild } from \"../elements/Input\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { SelectFeild } from \"../elements/Select\";\nimport { TextAreaFeild } from \"../elements/TextArea\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport classes from \"./UserProfile.styled\";\n\nclass UserProfile extends React.Component {\n  render() {\n    const { classes } = this.props;\n    if (!this.props.fields.length) {\n      return null;\n    }\n    const initialValues = Object.assign(\n      {},\n      ...this.props.fields.map(item => ({ [item.field_name]: \"\" }))\n    );\n    return (\n      <div>\n        <Formik\n          onSubmit={values => this.props.onSubmit(values)}\n          initialValues={initialValues}\n          enableReinitialize={true}\n        >\n          {({ values }) => (\n            <Form>\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"flex-start\"\n                alignContent=\"flex-start\"\n                spacing={2}\n                className={classes.gridContainer}\n              >\n                {this.props.fields.map((field, i) => {\n                  if (field.field_type === \"STRING\") {\n                    return (\n                      <Grid key={i} item xs={12} sm={6} md={4} lg={3}>\n                        <Field\n                          name={field.field_name}\n                          placeholder={field.field_label}\n                          component={InputTextFeild}\n                        />\n                      </Grid>\n                    );\n                  }\n                  if (field.field_type === \"Select\") {\n                    return (\n                      <Grid key={i} item xs={12} sm={6} md={4} lg={3}>\n                        <Field\n                          name={field.field_name}\n                          placeholder={field.field_label}\n                          options={field.options}\n                          component={SelectFeild}\n                        />\n                      </Grid>\n                    );\n                  }\n                  if (field.field_type === \"TextArea\") {\n                    return (\n                      <Grid key={i} item xs={12} sm={6} md={4} lg={3}>\n                        <Field\n                          name={field.field_name}\n                          component={TextAreaFeild}\n                        />\n                      </Grid>\n                    );\n                  }\n                })}\n              </Grid>\n              <div className={classes.submit}>\n                <Button variant=\"contained\" type=\"submit\">\n                  Submit\n                </Button>\n              </div>\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(classes)(UserProfile);","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport const CheckboxtFeild = ({ placeholder, field }) => {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormControlLabel\n        control={<Checkbox {...field} color=\"primary\" />}\n        label={placeholder}\n      />\n    </FormControl>\n  );\n};\n","const classes = theme => ({\n  groupRoles: {\n    textAlign: \"left\"\n  }\n});\n\nexport default classes;\n","import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Grid, withStyles } from \"@material-ui/core\";\nimport { CheckboxtFeild } from \"../elements/Checkbox\";\nimport classes from \"./GroupRoles.styled\";\n\nclass GroupRolesForm extends React.Component {\n  render() {\n    const { classes } = this.props;\n    if (!this.props.fields.length) {\n      return null;\n    }\n    const initialValues = Object.assign(\n      {},\n      ...this.props.fields.map(item => ({ [item.field_name]: \"\" }))\n    );\n    return (\n      <Formik\n        onSubmit={values => this.props.onSubmit(values)}\n        initialValues={initialValues}\n        enableReinitialize={true}\n      >\n        {({ values }) => (\n          <Form>\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"flex-start\"\n              alignContent=\"flex-start\"\n              spacing={0}\n            >\n              {this.props.fields.map((field, i) => {\n                if (field.field_type === \"Checkbox\") {\n                  return (\n                    <Grid key={i} item xs={12} className={classes.groupRoles} >\n                      <Field\n                        name={field.field_name}\n                        placeholder={field.field_label}\n                        component={CheckboxtFeild}\n                      />\n                    </Grid>\n                  );\n                }\n              })}\n            </Grid>\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default withStyles(classes)(GroupRolesForm);","const classes = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    boxShadow: \"none\"\n  },\n  table: {\n    boxShadow: \"none\",\n    border: \"1px solid #ccc\"\n  },\n  grid: {\n    textAlign: \"left\"\n  },\n  gridContainer: {\n    textAlign: \"left\",\n    marginTop: \"0\"\n  },\n  applicationLabel: {\n    paddingTop: \"20px\"\n  }\n});\n\nexport default classes;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { SelectFeild } from \"../elements/Select\";\nimport { Field, Form, Formik } from \"formik\";\nimport classes from \"./Applications.styled\";\n\nclass Applications extends React.Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"flex-start\"\n          alignContent=\"flex-start\"\n          spacing={2}\n          className={classes.gridContainer}\n        >\n          <Grid item xs={12} sm={3} className={classes.grid}>\n            <Typography className={classes.applicationLabel} variant=\"body1\" gutterBottom>\n              Add a single application\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={9} className={classes.grid}>\n            <Formik>\n              <Form>\n                <Field\n                  name=\"application\"\n                  options={[\n                    {\n                      value_display: \"99 Cent Manifest\",\n                      value_string: \"99 Cent Manifest\",\n                      id: 1\n                    }\n                  ]}\n                  component={SelectFeild}\n                />\n              </Form>\n            </Formik>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"flex-start\"\n          alignContent=\"flex-start\"\n          spacing={2}\n        >\n          <Grid item xs={12} sm={3}></Grid>\n          <Grid item xs={12} sm={9}>\n            <div>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Role Name</TableCell>\n                    <TableCell>Menu Category</TableCell>\n                    <TableCell>Application Name</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.applications.map((row, i) => (\n                    <TableRow key={i}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.roleName}\n                      </TableCell>\n                      <TableCell>{row.menuCategory}</TableCell>\n                      <TableCell>{row.applicationName}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(classes)(Applications);\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    width: \"100%\",\n    overflowX: \"auto\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    boxShadow: \"none\",\n    border: \"1px solid #ccc\"\n  },\n  gridContainer: {\n    textAlign: \"left\",\n    marginTop: \"10px\"\n  }\n}));\n\nexport default useStyles;","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport useStyles from \"./UserAttributes.styled\";\n\nfunction createData(roleName, menuCategory, applicationName) {\n  return { roleName, menuCategory, applicationName };\n}\n\nconst rows = [\n  createData(\"99 Cent Manifest\", \"Reports - IBO\", \"99 Cent Manifest\"),\n  createData(\"99 Cent Manifest\", \"Reports - IBO\", \"99 Cent Manifest v2 RPM\"),\n  createData(\"99 Cent Manifest\", \"Reports - IBO\", \"99 Cent Old Manifest\"),\n  createData(\"99 Cent Manifest\", \"Reports - IBO\", \"Werner Rates\")\n];\n\nconst UserAttributes = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"flex-start\"\n        alignContent=\"flex-start\"\n        spacing={2}\n        className={classes.gridContainer}\n      >\n        <Grid item xs={12} sm={12} style={{ textAlign: \"right\" }}>\n          <Button variant=\"contained\">Add Attribute</Button>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"flex-start\"\n        alignContent=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12} sm={3}></Grid>\n        <Grid item xs={12} sm={9}>\n          <div className={classes.root}>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Attribute Key</TableCell>\n                    <TableCell>Attribute Value</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row, i) => (\n                    <TableRow key={i}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.roleName}\n                      </TableCell>\n                      <TableCell>{row.menuCategory}</TableCell>\n                      <TableCell>{row.applicationName}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default UserAttributes;\n","const classes = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    paddingTop: 8\n  },\n  paper: {\n    padding: \"15px\"\n  },\n  table: {\n    boxShadow: \"none\"\n  },\n  userAttributes: {\n    marginTop: \"15px\"\n  },\n  applications: {\n    padding: \"12px\"\n  },\n  userProfile: {\n    marginTop: \"15px\"\n  }\n});\n\nexport default classes;\n","import React from \"react\";\nimport UserProfile from \"../../components/userprofiles/UserProfile\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupRolesForm from \"../../components/grouproles/GroupRoles\";\nimport Applications from \"../../components/application/Applications\";\nimport UserAttributes from \"../../components/userattributes/UserAttributes\";\nimport { Paper, Divider, Typography, makeStyles } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport classes from \"./Dashboard.styled\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        user_profile: [],\n        group_roles: [],\n        applications: [],\n        user_attributes: []\n      }\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://react-usermanager.firebaseio.com/fields.json\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ fields: data });\n      })\n      .catch(console.log);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container className={classes.container} maxWidth=\"lg\">\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"flex-start\"\n            alignContent=\"flex-start\"\n            spacing={3}\n          >\n            <Grid item xs={12} className={classes.userProfile}>\n              <Paper className={classes.paper}>\n                <Typography align=\"left\" gutterBottom variant=\"h6\">\n                  User Profile\n                </Typography>\n                <Divider variant=\"fullWidth\" />\n                <UserProfile\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  fields={this.state.fields.user_profile}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"flex-start\"\n            alignContent=\"flex-start\"\n            spacing={3}\n          >\n            <Grid item xs={12} md={4} sm={12} lg={4}>\n              <Paper className={classes.paper}>\n                <Typography align=\"left\" gutterBottom variant=\"h6\">\n                  Group Roles\n                </Typography>\n                <Divider variant=\"fullWidth\" />\n                <GroupRolesForm\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  fields={this.state.fields.group_roles}\n                />\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              md={8}\n              sm={12}\n              lg={8}\n              className={classes.applications}\n            >\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Typography align=\"left\" gutterBottom variant=\"h6\">\n                    Applications\n                  </Typography>\n                  <Divider variant=\"fullWidth\" />\n                  <Applications applications={this.state.fields.applications} />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} className={classes.userAttributes}>\n                <Paper className={classes.paper}>\n                  <Typography align=\"left\" gutterBottom variant=\"h6\">\n                    User Attributes\n                  </Typography>\n                  <Divider variant=\"fullWidth\" />\n                  <UserAttributes\n                    user_attributes={this.state.fields.user_attributes}\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(classes)(Dashboard);\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const THEME = createMuiTheme({\n  typography: {\n    fontFamily: '\"Open Sans\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500\n  },\n  overrides: {\n    MuiTableCell: {\n        head:{\n            fontWeight: \"600\"\n        }\n    }\n  }\n});\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { THEME } from \"./theme\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={THEME}>\n      <div className=\"App\">\n        <NavBar />\n        <Dashboard />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}